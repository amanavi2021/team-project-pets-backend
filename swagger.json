{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://team-project-pets-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Pets",
      "description": "Own pets endpoints"
    },
    {
      "name": "Notices",
      "description": "Pets notices endpoints"
    }
  ],
  "paths": {
    "api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },

    "api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },

    "api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "api/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updates object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "api/users/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Token refresh",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Refresh Token invalid",
            "content": {}
          }
        }
      }
    },

    "api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Information about user and his pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add your pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pet information request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "api/pets/:petId": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Remove your pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Remove pet request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemovePetsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemovePetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Pet with this id not found",
            "content": {}
          }
        }
      }
    },

    "api/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get list of the pets sorted by category",
        "parameters": [
          {
            "name": "category",
            "in": "query params",
            "schema": {
              "type": "string",
              "enum": ["sell", "lost-found", "in-good-hands"],
              "default": "sell"
            },
            "description": "Category of the pets"
          },
          {
            "name": "page",
            "in": "query params",
            "schema": {
              "type": "string",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query params",
            "schema": {
              "type": "string",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "name": "searchQuery",
            "in": "query params",
            "schema": {
              "type": "string"
            },
            "description": "Search query for filtering by name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Filtered array of notices"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },

    "api/notices/own": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get own pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOwnPetsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "api/notices/favorites": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favotite notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Get favorite notices request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GetFavoriteNoticesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },

    "api/notices/:noticeId": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notice by Id",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Get notice request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GetNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },

      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice into favorites / delete notice from favorites",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add/delete favorite notice request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddDeleteFavoriteNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDeleteFavoriteNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Notices"],
        "summary": "Delete own notice",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Delete own notice request body",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOwnNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOwnNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Liliia"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "201"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTEzMzBjNThjZWQ1MGMyNGMzOTc3MCIsImlhdCI6MTY5MjQ4MDI2OCwiZXhwIjoxNjkyNDg3NDY4fQ.0Ta0Sifp6OCUeO_Z3LChCCmbrTJjCXmlK_XoNRavwr2"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Liliia"
              },
              "phone": {
                "type": "string",
                "description": "User's contact phone number",
                "example": "+380661234567"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Kyiv"
              },
              "birthday": {
                "type": "string",
                "description": "User's birsthday date",
                "example": "01-01-2001"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar",
                "example": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
              }
            }
          }
        },
        "example": {
          "code": "201",
          "status": "success",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTEzMzBjNThjZWQ1MGMyNGMzOTc3MCIsImlhdCI6MTY5MjQ4MDI2OCwiZXhwIjoxNjkyNDg3NDY4fQ.0Ta0Sifp6OCUeO_Z3LChCCmbrTJjCXmlK_XoNRavwr2",
          "user": {
            "email": "liliia@gmail.com",
            "name": "Liliia",
            "phone": "+380661234567",
            "city": "Kyiv",
            "birthday": "01-01-2001",
            "avatarUrl": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTEzMzBjNThjZWQ1MGMyNGMzOTc3MCIsImlhdCI6MTY5MjQ4MDI2OCwiZXhwIjoxNjkyNDg3NDY4fQ.0Ta0Sifp6OCUeO_Z3LChCCmbrTJjCXmlK_XoNRavwr2"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Liliia"
              },
              "phone": {
                "type": "string",
                "description": "User's contact phone number",
                "example": "+380661234567"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Kyiv"
              },
              "birthday": {
                "type": "string",
                "description": "User's birsthday date",
                "example": "01-01-2001"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar",
                "example": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
              }
            }
          }
        },
        "example": {
          "code": "200",
          "status": "success",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTEzMzBjNThjZWQ1MGMyNGMzOTc3MCIsImlhdCI6MTY5MjQ4MDI2OCwiZXhwIjoxNjkyNDg3NDY4fQ.0Ta0Sifp6OCUeO_Z3LChCCmbrTJjCXmlK_XoNRavwr2",
          "user": {
            "email": "liliia@gmail.com",
            "name": "Liliia",
            "phone": "+380661234567",
            "city": "Kyiv",
            "birthday": "01-01-2001",
            "avatarUrl": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
          }
        }
      },

      "UpdateRequest": {
        "type": "object",
        "required": ["name", "email", "birthday", "phone", "city", "avatarURL"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Liliia"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday date",
            "example": "02-02-2002"
          },
          "phone": {
            "type": "string",
            "description": "User's contact phone number",
            "example": "+380931234567"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lutsk"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Liliia"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's contact phone number",
                "example": "+380661234567"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Lutsk"
              },
              "birthday": {
                "type": "string",
                "description": "User's birsthday date",
                "example": "02-02-2002"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar",
                "example": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
              }
            }
          }
        },
        "example": {
          "code": "200",
          "status": "success",
          "user": {
            "name": "Liliia",
            "email": "liliia@gmail.com",
            "phone": "+380661234567",
            "city": "Lutsk",
            "birthday": "02-02-2002",
            "avatarUrl": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
          }
        }
      },

      "RefreshResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "token": {
            "type": "string",
            "example": "ytJhbGciOiJIUz.eyJpZCI6IjY0MTgzZWJ.953U8XHlZd6LGgNPK7jk8"
          }
        },
        "example": {
          "code": "200",
          "status": "success",
          "token": "ytJhbGciOiJIUz.eyJpZCI6IjY0MTgzZWJ.953U8XHlZd6LGgNPK7jk8"
        }
      },

      "CurrentResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Liliia"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's contact phone number",
                "example": "+380661234567"
              },
              "city": {
                "type": "string",
                "description": "User's city",
                "example": "Lutsk"
              },
              "birthday": {
                "type": "string",
                "description": "User's birsthday date",
                "example": "02-02-2002"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar",
                "example": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
              }
            }
          },
          "pets": {
            "type": "array",
            "items": {
              "type": "objects",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "pet's id",
                  "example": "64e0e63c58543456a820bf03"
                },
                "name": {
                  "type": "string",
                  "description": "pet's name",
                  "example": "Marsik"
                },
                "date": {
                  "type": "string",
                  "description": "pet's birthday date",
                  "example": "01-01-2001"
                },
                "type": {
                  "type": "string",
                  "description": "pet's type",
                  "example": "cat"
                },
                "imageURL": {
                  "type": "string",
                  "description": "pet's avatar link",
                  "example": "https://res.cloudinary.com/amanavi2021/image/upload/v1692460605/pets/cw4optpgwhpowjd7zlw1.jpg"
                },
                "comments": {
                  "type": "string",
                  "description": "comments about pets",
                  "example": "the best cat in the world"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "owner's id",
                      "example": "64e0e63c58543456a820bf03"
                    },
                    "name": {
                      "type": "string",
                      "description": "Owner's name",
                      "example": "Liliia"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "200",
          "status": "success",
          "user": {
            "name": "Liliia",
            "email": "liliia@gmail.com",
            "phone": "+380661234567",
            "city": "Lutsk",
            "birthday": "02-02-2002",
            "avatarUrl": "//www.gravatar.com/avatar/6b15a399b245e38e38f3d511b5e3c87b"
          },
          "pets": [
            {
              "_id": "64e0e63c58543456a820bf03",
              "name": "Marsik",
              "date": "01-01-2001",
              "type": "cat",
              "imageURL": "https://res.cloudinary.com/amanavi2021/image/upload/v1692460605/pets/cw4optpgwhpowjd7zlw1.jpg",
              "comments": "the best cat in the world",
              "owner": {
                "_id": "64e0e47b52f97c596bf8fdab",
                "name": "Liliia"
              }
            }
          ]
        }
      },

      "CreatePetsRequest": {
        "type": "object",
        "required": ["name", "date", "type", "image", "comments", "owner"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name"
          },
          "date": {
            "type": "string",
            "description": "Pet's birthday date DD-MM-YYYY"
          },
          "type": {
            "type": "string",
            "description": "Pet's breed"
          },
          "image": {
            "type": "file",
            "description": "Pet's image file"
          },
          "comments": {
            "type": "string",
            "description": "Comments about pets"
          }
        }
      },

      "CreatePetsResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "201"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "pet": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Pet's id",
                "example": "64e0e63c58543456a820bf03"
              },
              "name": {
                "type": "string",
                "description": "Pet's name",
                "example": "Barsik"
              },
              "date": {
                "type": "string",
                "description": "Pet's birthday date",
                "example": "DD.MM.YYYY"
              },
              "type": {
                "type": "string",
                "description": "Pet's breed",
                "example": "British Shorthair"
              },
              "imageURL": {
                "type": "string",
                "description": "Pet's image link",
                "example": "https://res.cloudinary.com/amanavi2021/image/upload/v1692460605/pets/cw4optpgwhpowjd7zlw1.jpg"
              },
              "comments": {
                "type": "string",
                "description": "Comments about pets",
                "example": "The best cat in the world"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "owner's id",
                    "example": "64e0e63c58543456a820bf03"
                  },
                  "name": {
                    "type": "string",
                    "description": "Owner's name",
                    "example": "Liliia"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "201",
          "status": "success",
          "pet": {
            "_id": "64e0e63c58543456a820bf03",
            "name": "Barsik",
            "date": "01.01.2001",
            "type": "British Shorthair",
            "imageURL": "https://res.cloudinary.com/amanavi2021/image/upload/v1692460605/pets/cw4optpgwhpowjd7zlw1.jpg",
            "comments": "The best cat in the world",
            "owner": {
              "_id": "64e0e47b52f97c596bf8fdab",
              "name": "Liliia"
            }
          }
        }
      },

      "RemovePetsRequest": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's ID",
            "example": "64e0e63c58543456a820bf03"
          }
        }
      },
      "RemovePetsResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      },

      "GetOwnPetsResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      },

      "GetFavoriteNoticesRequest": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's ID",
            "example": "64e0e63c58543456a820bf03"
          }
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      },

      "GetNoticeRequest": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's ID",
            "example": "64e0e63c58543456a820bf03"
          }
        }
      },
      "GetNoticeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      },

      "AddDeleteFavoriteNoticeRequest": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's ID",
            "example": "64e0e63c58543456a820bf03"
          }
        }
      },
      "AddDeleteFavoriteResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      },

      "DeleteOwnNoticeRequest": {
        "type": "object",
        "properties": {
          "petId": {
            "type": "string",
            "description": "Pet's ID",
            "example": "64e0e63c58543456a820bf03"
          }
        }
      },
      "DeleteOwnNoticeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "petId": {
            "type": "string",
            "example": "64e0e63c58543456a820bf03"
          }
        },
        "example": {
          "message": "Delete success"
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
